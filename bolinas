#!/usr/bin/env python2

import sys

from lib.exceptions import InvocationException, InputFormatException

from parser.parser import Parser
from aligner.aligner import Aligner
from extractor_synsem.extractor_synsem import ExtractorSynSem
from extractor_cansem.extractor_cansem import ExtractorCanSem
from extractor_cansem.parser_cansem import ParserCanSem
from binarizer.binarizer import Binarizer
from parser_td.parser_td import ParserTD

SUBMODULES = {
  'parse': Parser,
  'parse-td': ParserTD,
  'binarize': Binarizer,
  'align': Aligner,
  'extract-synsem': ExtractorSynSem,
  'extract-cansem': ExtractorCanSem,
  'parse-cansem': ParserCanSem,
}

HELP_EXIT_CODE = 1
ERROR_EXIT_CODE = 2

def print_usage_message_and_exit():
  print >>sys.stderr, "Usage: bolinas <command> arg1 arg2 ..."
  print >>sys.stderr
  print >>sys.stderr, "where <command> is one of:"
  print >>sys.stderr, '  ', '\n   '.join(SUBMODULES.keys())
  print >>sys.stderr
  print >>sys.stderr, 'See `bolinas help <command>` for more information.'
  sys.exit(HELP_EXIT_CODE)

def print_command_help_and_exit(command):
  print >>sys.stderr, SUBMODULES[command].help()
  sys.exit(HELP_EXIT_CODE)

if __name__ == '__main__':

  if len(sys.argv) < 2:
    print_usage_message_and_exit()

  command = sys.argv[1]

  if command == 'help':
    if len(sys.argv) < 3 or sys.argv[2] not in SUBMODULES:
      print_usage_message_and_exit()
    print_command_help_and_exit(sys.argv[2])

  if command not in SUBMODULES:
    print_usage_message_and_exit()

  try:
    SUBMODULES[command]().main(*sys.argv[2:])
  except InvocationException:
    print "BAD INVOCATION"
    print_command_help_and_exit(command)
  except InputFormatException as ex:
    print "BAD INPUT:", ex
    sys.exit(ERROR_EXIT_CODE)
